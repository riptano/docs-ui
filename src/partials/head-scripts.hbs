{{#with site.keys.ibmAnalyticsEnabled}}
<script>
/* eslint-disable */
// IBM Segment Common Properties - Required for all events
const SEGMENT_COMMON_PROPERTIES = {
  productTitle: '<ADD>',
  productCode: '<ADD>',
  productCodeType: '<ADD>',
  ut30: '<ADD>'
};

// IBM Analytics Configuration
window._ibmAnalytics = {
  "settings": {
    "name": "DataStax",
    "tealiumProfileName": "ibm-subsidiary",
  },
  "trustarc": {
    "privacyPolicyLink": "https://ibm.com/privacy"
  },
  "digitalData.page.services.google.enabled": true
};

{{#with ../site.keys.segment}}
// Provide Segment key for IBM Common Stats
window._analytics = window._analytics || {};
window._analytics.segment_key = "{{this}}";
{{/with}}

window.digitalData = {
  "page": {
    "pageInfo": {
      "ibm": {
        "siteId": "IBM_" + _ibmAnalytics.settings.name,
      },
      {{#with ../site.keys.segment}}
      "segment": {
        "enabled": true,
        "env": "prod",
        "key": "{{this}}",
        "coremetrics": false,
        "carbonComponentEvents": false,
        "commonProperties": SEGMENT_COMMON_PROPERTIES
      }
      {{/with}}
    },
    "category": {
      "primaryCategory": "PC230"
    }
  }
};

// Google Consent Mode v2 - Set defaults before Google tags load
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}

// Set default consent to denied
gtag('consent', 'default', {
  'ad_storage': 'denied',
  'ad_user_data': 'denied',
  'ad_personalization': 'denied',
  'analytics_storage': 'denied'
});

// TrustArc Consent Update Listener for Google Consent Mode
(function() {
  function updateGoogleConsent() {
    if (typeof window.truste !== 'undefined' && window.truste.cma) {
      var consent = window.truste.cma.callApi('getConsent', window.location.href) || {};

      // Map TrustArc categories to Google consent types
      // Category 0 = Required, 1 = Functional, 2 = Advertising, 3 = Analytics
      var hasAdvertising = consent[2] === 1;
      var hasAnalytics = consent[3] === 1;

      gtag('consent', 'update', {
        'ad_storage': hasAdvertising ? 'granted' : 'denied',
        'ad_user_data': hasAdvertising ? 'granted' : 'denied',
        'ad_personalization': hasAdvertising ? 'granted' : 'denied',
        'analytics_storage': hasAnalytics ? 'granted' : 'denied'
      });
    }
  }

  // Listen for consent changes
  if (window.addEventListener) {
    window.addEventListener('cm_data_subject_consent_changed', updateGoogleConsent);
    window.addEventListener('cm_consent_preferences_set', updateGoogleConsent);
  }

  // Initial check after TrustArc loads
  if (document.readyState === 'complete') {
    updateGoogleConsent();
  } else {
    window.addEventListener('load', updateGoogleConsent);
  }
})();
</script>
<script src="//1.www.s81c.com/common/stats/ibm-common.js" type="text/javascript" async="async"></script>
{{#with ../site.keys.segment}}
<script src="https://consent.trustarc.com/get?name=trustarc-segment-wrapper-v1.1.js" async></script>
<script>
// Wrap Segment with TrustArc once both are loaded (IBM Common Stats handles Segment loading)
(function() {
  var wrappedAnalytics = null;

  function wrapSegmentWithTrustArc() {
    if (typeof TrustArcWrapper !== 'undefined' && window.analytics && !wrappedAnalytics) {
      // IBM Common Stats already loaded Segment, just wrap it with TrustArc consent checking
      wrappedAnalytics = TrustArcWrapper.withTrustArc(window.analytics);
      console.log('[TrustArc] Segment wrapped with consent management');
    } else if (!wrappedAnalytics) {
      setTimeout(wrapSegmentWithTrustArc, 100);
    }
  }

  wrapSegmentWithTrustArc();
})();
</script>
{{/with}}
{{/with}}

<script>var uiRootPath = '{{{uiRootPath}}}'</script>

<script>
  function setTheme() {
    var localStorage = window.localStorage.getItem("themePreference");
    var systemPreference = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";

    if (localStorage !== "dark" && localStorage !== "light") {
      document.documentElement.setAttribute("data-theme", systemPreference);
      document.documentElement.setAttribute("data-theme-system", true);
      window.localStorage.removeItem("themePreference");
    } else {
      document.documentElement.setAttribute("data-theme", localStorage);
    }
  };
  setTheme();
</script>
